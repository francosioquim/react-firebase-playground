version: 2
defaults: &defaults
    working_directory: ~/workspace
    docker:
        - image: circleci/node:9.10
# CircleCI has disabled the cache across forks for security reasons.
# Following their official statement, it was a quick solution, they
# are working on providing this feature back with appropriate security measures.
# restore_repo: &restore_repo
#   restore_cache:
#     key: v1-repo-{{ .Branch }}-{{ .Revision }}
install_js: &install_js
    run:
        name: Install js dependencies
        command: |
            yarn config set yarn-offline-mirror ~/.cache/npm-packages-offline-cache/v1
            yarn install --production=false
restore_yarn_cache: &restore_yarn_cache
    restore_cache:
        key: v1-yarn-sha-{{ checksum "yarn.lock" }}
restore_yarn_offline_mirror: &restore_yarn_offline_mirror
    restore_cache:
        key: v1-npm-packages-offline-cache
attach_root_workspace: &attach_root_workspace
    attach_workspace:
        at: ~/workspace
persist_root_workspace: &persist_root_workspace
    persist_to_workspace:
        root: .
        paths:
            - ./*
jobs:
    checkout:
        <<: *defaults
        steps:
            - checkout
            - *restore_yarn_offline_mirror
            - *restore_yarn_cache
            - *attach_root_workspace
            - run:
                  name: Check versions and env
                  command: |
                      yarn --version
                      node --version
                      docker --version
                      docker-compose --version
                      env
                      yarn cache dir
            - run:
                  name: Add registry
                  command: echo "//registry.runsonsauce.com:3000/:_authToken=$NPM_AUTH_TOKEN" > ~/.npmrc
            - *install_js
            - run:
                  name: Should not have any git not staged
                  command: git diff --exit-code
            - run:
                  name: Install
                  command: npm install
            - save_cache:
                  key: v1-yarn-sha-{{ checksum "yarn.lock" }}
                  paths:
                      - ~/.cache/yarn/v1
            - save_cache:
                  key: v1-npm-packages-offline-cache
                  paths:
                      - ~/.cache/npm-packages-offline-cache/v1
            - *persist_root_workspace

    build_dev:
        <<: *defaults
        steps:
            - *attach_root_workspace
            - run:
                  name: Build Dev
                  command: npm run build:dev
            - *persist_root_workspace

    build_production:
        <<: *defaults
        steps:
            - *attach_root_workspace
            - run:
                  name: Build Production
                  command: npm run build:prod
            - run:
                  name: Tag Build
                  command: echo "${CIRCLE_TAG}-production" > build/version.txt
            - *persist_root_workspace

    test_unit:
        <<: *defaults
        steps:
            - *attach_root_workspace
            - run:
                  name: Export changed files
                  command: |
                      # changed files on this branch
                      # `git diff --name-only master` but since the checkout used reset --hard
                      # we need to parse the revs for the actual master
                      echo 'export CHANGED_FILES=$(git diff --name-only $(git rev-parse origin/master)...)' >> $BASH_ENV
            - run:
                  name: Check if yarn prettier was run
                  command: |
                      # if we use an empty string as a pattern grep will match everything
                      if [ -z "$CHANGED_FILES" ]; then
                        echo "no changes"
                      else
                        # Files that should have been formatted while working on this branch
                        # CircleCI does not support interpolation when setting environment variables
                        echo 'export FORMATTED_FILES=$(yarn --silent prettier:files | grep "$CHANGED_FILES")' >> $BASH_ENV
                        source $BASH_ENV
                        if [ -z "$FORMATTED_FILES" ]; then
                          echo "no files for prettier were changed"
                        else
                          yarn prettier:ci $FORMATTED_FILES
                        fi
                      fi
            - run:
                  name: Lint
                  command: yarn eslint-check
            - run:
                  name: Run tests
                  command: yarn test

    deploy_dev:
        <<: *defaults
        steps:
            - run:
                  name: Install dependencies
                  working_directory: /
                  command: sudo apt-get -y install awscli
            - *attach_root_workspace
            # - run:
            #      name: Deploy development build
            #      command: aws s3 sync build/ "s3://${DEV_BUCKET}" --delete --region ap-southeast-2

    deploy_production:
        <<: *defaults
        steps:
            - run:
                  name: Install dependencies
                  working_directory: /
                  command: sudo apt-get -y install awscli
            - *attach_root_workspace
            # - run:
            #      name: Upload Production Build
            #      command: aws s3 sync build/ "s3://${REPO_BUCKET}/${CIRCLE_TAG}-production/" --delete --region ap-southeast-2

workflows:
    version: 2
    build_test_deploy:
        jobs:
            - checkout
            - build_dev:
                  requires:
                      - checkout
                  filters:
                      branches:
                          ignore: /.*/
                          only:
                              - develop
                              - master
                              - /feature.*/
                              - /fix.*/
            - build_production:
                  requires:
                      - checkout
                  filters:
                      tags:
                          only: /^[A-Za-z]*.[0-9].[0-9]{1,3}$/
                      branches:
                          ignore: /.*/
            - test_unit:
                  requires:
                      - checkout
            - deploy_dev:
                  requires:
                      - checkout
                      - test_unit
                      - build_dev
                  filters:
                      branches:
                          ignore: /.*/
                          only:
                              - develop
                              - master
                              - /feature.*/
                              - /fix.*/
            - deploy_production:
                  requires:
                      - checkout
                      - test_unit
                      - build_production
                  filters:
                      tags:
                          only: /^[A-Za-z]*.[0-9].[0-9]{1,3}$/
                      branches:
                          ignore: /.*/
